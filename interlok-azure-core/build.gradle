ext {
  componentName = 'Interlok Azure/Common'
  componentDesc = "Common components for interacting with Azure and Office 365"
  delombokTargetDir = new File("${project.projectDir}/src/main/generated")
  jacksonVersion = '2.16.1'
  nettyVersion = '4.1.107.Final'
}

dependencies {

  api ("com.microsoft.azure:msal4j:1.14.3")
    constraints {
      api("net.minidev:json-smart:2.5.0") {
        because "CVE-2021-27568: Affect json-smart up to (excluding) 2.3.1"
      }
    }
  api ("com.microsoft.graph:microsoft-graph:5.80.0") {
    exclude group: "com.google.code.gson", module: "gson"
    exclude group: "com.squareup.okhttp3", module: "okhttp"
  }
  implementation ("com.google.code.gson:gson:2.10.1")
  implementation ("com.squareup.okhttp3:okhttp:4.12.0") {
    exclude group: "com.google.code.gson", module: "gson"
    exclude group: "com.squareup.okio", module: "okio"
  }
  implementation ("com.squareup.okio:okio:3.8.0")
  api ("com.azure:azure-identity:1.11.2") {
    // Exclude KeePassJava2 dependencies, because we don't care
    // If people want it, then can include it themselves.
    exclude group: "org.linguafranca.pwdb", module: "KeePassJava2"
    exclude group: "org.simpleframework", module: "simple-xml"
    exclude group: "io.netty"
  }
  api ("com.azure:azure-storage-file-datalake:12.18.1") {
    exclude group: "io.netty"
  }

  implementation ("io.netty:netty-handler:$nettyVersion")
  implementation ("io.netty:netty-handler-proxy:$nettyVersion")
  implementation ("io.netty:netty-transport-native-epoll:$nettyVersion")
  implementation ("io.netty:netty-transport-native-unix-common:$nettyVersion")
  implementation ("io.netty:netty-transport-native-kqueue:$nettyVersion")
  implementation ("io.netty:netty-codec:$nettyVersion")
  implementation ("io.netty:netty-codec-http2:$nettyVersion")
  implementation ("io.netty:netty-codec-http:$nettyVersion")
  implementation ("io.netty:netty-resolver-dns:$nettyVersion")

  api ("org.codehaus.woodstox:stax2-api:4.2.2")
  api ("org.codehaus.staxmate:stax2:2.1")
  api ("com.google.guava:guava:33.0.0-jre")
  // azure-core via azure-identity has an explicit dependency on these jars,
  // so we need to pin the right version
  // Dependency to platform/BOM
  api (platform("com.fasterxml.jackson:jackson-bom:$jacksonVersion"))
  api ("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
  api ("com.fasterxml.jackson.dataformat:jackson-dataformat-xml")
  // should be pulled in by the jackson-datatype/dataformat deps.
  api ("com.fasterxml.jackson.core:jackson-databind")
  api ("com.fasterxml.jackson.core:jackson-core")

  api ("commons-codec:commons-codec:1.16.1")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task examplesJar(type: Jar, dependsOn: test) {
    classifier = 'examples'
    from new File(buildDir, '/examples')
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.extensions.delombokTask
}


jar {
  manifest {
    attributes("Built-By": System.getProperty('user.name'),
              "Build-Jdk": System.getProperty('java.version'),
              "Implementation-Title": componentName,
              "Implementation-Version": project.version,
              "Implementation-Vendor-Id": project.group,
              "Implementation-Vendor": organizationName)
  }
}

artifacts {
    archives javadocJar
    archives examplesJar
    archives sourcesJar
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      artifact javadocJar { classifier "javadoc" }
      artifact examplesJar { classifier "examples" }
      artifact sourcesJar { classifier "sources" }
      pom.withXml {
        asNode().appendNode("name", componentName)
        asNode().appendNode("description", componentDesc)
        asNode().appendNode("url", "https://interlok.adaptris.net/interlok-docs/#/")
        def properties = asNode().appendNode("properties")
        properties.appendNode("target", "3.11.1+")
        properties.appendNode("tags", "azure,office365,outlook,exchange")
        properties.appendNode("license", "false")
        properties.appendNode("readme", "https://github.com/adaptris/interlok-azure/raw/develop/README.md")
        properties.appendNode("repository", "https://github.com/adaptris/interlok-azure")
      }
    }
  }
  repositories {
    maven {
      credentials {
        username repoUsername
        password repoPassword
      }
      url mavenPublishUrl
    }
  }
}

delombok {
  target = delombokTargetDir
}

task deleteGeneratedFiles(type: Delete) {
  delete delombokTargetDir
}

processTestResources.dependsOn copyUnitTestProperties
javadoc.dependsOn offlinePackageList
clean.dependsOn deleteGeneratedFiles
